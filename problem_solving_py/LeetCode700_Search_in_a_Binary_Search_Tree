from typing import Optional


# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right


class Solution:
    def searchBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:
        if root is None:
            return None
        if root.val == val:
            return root
        else:
            left = self.searchBST(root.left, val)
            right = self.searchBST(root.right, val)
        if left:
            return left
        elif right:
            return right
        else:
            return None


if __name__ == "__main__":
    solution = Solution()
    node = TreeNode(4, TreeNode(2, TreeNode(1), TreeNode(3)), TreeNode(7))
    print(solution.searchBST(node, 5))
